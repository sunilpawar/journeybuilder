<?php

/**
 * @package CRM
 * @copyright CiviCRM LLC https://civicrm.org/licensing
 *
 * Generated from com.skvare.journeybuilder/xml/schema/CRM/Journeybuilder/JourneyCondition.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 * (GenCodeChecksum:7ef8eeeb14021cc4e655698a1925bef4)
 */
use CRM_Journeybuilder_ExtensionUtil as E;

/**
 * Database access object for the JourneyCondition entity.
 */
class CRM_Journeybuilder_DAO_JourneyCondition extends CRM_Core_DAO {
  const EXT = E::LONG_NAME;
  const TABLE_ADDED = '';

  /**
   * Static instance to hold the table name.
   *
   * @var string
   */
  public static $_tableName = 'civicrm_journey_conditions';

  /**
   * Should CiviCRM log any modifications to this table in the civicrm_log table.
   *
   * @var bool
   */
  public static $_log = FALSE;

  /**
   * Unique JourneyCondition ID
   *
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $id;

  /**
   * FK to step
   *
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $step_id;

  /**
   * condition type
   *
   * @var string|null
   *   (SQL type: varchar(0))
   *   Note that values will be retrieved from the database as a string.
   */
  public $condition_type;

  /**
   * @var string|null
   *   (SQL type: varchar(255))
   *   Note that values will be retrieved from the database as a string.
   */
  public $field_name;

  /**
   * Operator type
   *
   * @var string|null
   *   (SQL type: varchar(0))
   *   Note that values will be retrieved from the database as a string.
   */
  public $operator;

  /**
   * value.
   *
   * @var string|null
   *   (SQL type: text)
   *   Note that values will be retrieved from the database as a string.
   */
  public $value;

  /**
   * Logic Operator
   *
   * @var string|null
   *   (SQL type: varchar(0))
   *   Note that values will be retrieved from the database as a string.
   */
  public $logic_operator;

  /**
   * Sort Order
   *
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $sort_order;

  /**
   * FK to Contact
   *
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $contact_id;

  /**
   * Class constructor.
   */
  public function __construct() {
    $this->__table = 'civicrm_journey_conditions';
    parent::__construct();
  }

  /**
   * Returns localized title of this entity.
   *
   * @param bool $plural
   *   Whether to return the plural version of the title.
   */
  public static function getEntityTitle($plural = FALSE) {
    return $plural ? E::ts('Journey Conditions') : E::ts('Journey Condition');
  }

  /**
   * Returns all the column names of this table
   *
   * @return array
   */
  public static function &fields() {
    if (!isset(Civi::$statics[__CLASS__]['fields'])) {
      Civi::$statics[__CLASS__]['fields'] = [
        'id' => [
          'name' => 'id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('ID'),
          'description' => E::ts('Unique JourneyCondition ID'),
          'required' => TRUE,
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_journey_conditions.id',
          'table_name' => 'civicrm_journey_conditions',
          'entity' => 'JourneyCondition',
          'bao' => 'CRM_Journeybuilder_DAO_JourneyCondition',
          'localizable' => 0,
          'html' => [
            'type' => 'Number',
          ],
          'readonly' => TRUE,
          'add' => NULL,
        ],
        'step_id' => [
          'name' => 'step_id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Step'),
          'description' => E::ts('FK to step'),
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_journey_conditions.step_id',
          'table_name' => 'civicrm_journey_conditions',
          'entity' => 'JourneyCondition',
          'bao' => 'CRM_Journeybuilder_DAO_JourneyCondition',
          'localizable' => 0,
          'FKClassName' => 'CRM_Journeybuilder_DAO_JourneyStep',
          'add' => NULL,
        ],
        'condition_type' => [
          'name' => 'condition_type',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Condition Type'),
          'description' => E::ts('condition type'),
          'maxlength' => 0,
          'size' => CRM_Utils_Type::TWO,
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_journey_conditions.condition_type',
          'table_name' => 'civicrm_journey_conditions',
          'entity' => 'JourneyCondition',
          'bao' => 'CRM_Journeybuilder_DAO_JourneyCondition',
          'localizable' => 0,
          'html' => [
            'type' => 'Select',
          ],
          'pseudoconstant' => [
            'callback' => 'CRM_Journeybuilder_BAO_JourneyCondition::conditionType',
          ],
          'add' => '1.0',
        ],
        'field_name' => [
          'name' => 'field_name',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Field Name'),
          'maxlength' => 255,
          'size' => CRM_Utils_Type::HUGE,
          'usage' => [
            'import' => TRUE,
            'export' => TRUE,
            'duplicate_matching' => TRUE,
            'token' => FALSE,
          ],
          'import' => TRUE,
          'where' => 'civicrm_journey_conditions.field_name',
          'export' => TRUE,
          'table_name' => 'civicrm_journey_conditions',
          'entity' => 'JourneyCondition',
          'bao' => 'CRM_Journeybuilder_DAO_JourneyCondition',
          'localizable' => 0,
          'html' => [
            'type' => 'Text',
          ],
          'add' => '1.0',
        ],
        'operator' => [
          'name' => 'operator',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Operator'),
          'description' => E::ts('Operator type'),
          'maxlength' => 0,
          'size' => CRM_Utils_Type::TWO,
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_journey_conditions.operator',
          'table_name' => 'civicrm_journey_conditions',
          'entity' => 'JourneyCondition',
          'bao' => 'CRM_Journeybuilder_DAO_JourneyCondition',
          'localizable' => 0,
          'html' => [
            'type' => 'Select',
          ],
          'pseudoconstant' => [
            'callback' => 'CRM_Journeybuilder_BAO_JourneyCondition::getAvailableOperators',
          ],
          'add' => '1.0',
        ],
        'value' => [
          'name' => 'value',
          'type' => CRM_Utils_Type::T_TEXT,
          'title' => E::ts('Value'),
          'description' => E::ts('value.'),
          'rows' => 4,
          'cols' => 60,
          'usage' => [
            'import' => TRUE,
            'export' => TRUE,
            'duplicate_matching' => TRUE,
            'token' => FALSE,
          ],
          'import' => TRUE,
          'where' => 'civicrm_journey_conditions.value',
          'export' => TRUE,
          'table_name' => 'civicrm_journey_conditions',
          'entity' => 'JourneyCondition',
          'bao' => 'CRM_Journeybuilder_DAO_JourneyCondition',
          'localizable' => 0,
          'html' => [
            'type' => 'TextArea',
          ],
          'add' => '1.0',
        ],
        'logic_operator' => [
          'name' => 'logic_operator',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Logic Operator'),
          'description' => E::ts('Logic Operator'),
          'maxlength' => 0,
          'size' => CRM_Utils_Type::TWO,
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_journey_conditions.logic_operator',
          'default' => 'AND',
          'table_name' => 'civicrm_journey_conditions',
          'entity' => 'JourneyCondition',
          'bao' => 'CRM_Journeybuilder_DAO_JourneyCondition',
          'localizable' => 0,
          'html' => [
            'type' => 'Select',
          ],
          'pseudoconstant' => [
            'callback' => 'CRM_Journeybuilder_BAO_JourneyCondition::getLogicOperators',
          ],
          'add' => '1.0',
        ],
        'sort_order' => [
          'name' => 'sort_order',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Sort Order'),
          'description' => E::ts('Sort Order'),
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_journey_conditions.sort_order',
          'table_name' => 'civicrm_journey_conditions',
          'entity' => 'JourneyCondition',
          'bao' => 'CRM_Journeybuilder_DAO_JourneyCondition',
          'localizable' => 0,
          'html' => [
            'type' => 'Number',
            'label' => E::ts("Sort Order"),
          ],
          'add' => NULL,
        ],
        'contact_id' => [
          'name' => 'contact_id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Contact ID'),
          'description' => E::ts('FK to Contact'),
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_journey_conditions.contact_id',
          'table_name' => 'civicrm_journey_conditions',
          'entity' => 'JourneyCondition',
          'bao' => 'CRM_Journeybuilder_DAO_JourneyCondition',
          'localizable' => 0,
          'FKClassName' => 'CRM_Contact_DAO_Contact',
          'add' => NULL,
        ],
      ];
      CRM_Core_DAO_AllCoreTables::invoke(__CLASS__, 'fields_callback', Civi::$statics[__CLASS__]['fields']);
    }
    return Civi::$statics[__CLASS__]['fields'];
  }

  /**
   * Returns the list of fields that can be imported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &import($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getImports(__CLASS__, 'journey_conditions', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of fields that can be exported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &export($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getExports(__CLASS__, 'journey_conditions', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of indices
   *
   * @param bool $localize
   *
   * @return array
   */
  public static function indices($localize = TRUE) {
    $indices = [];
    return ($localize && !empty($indices)) ? CRM_Core_DAO_AllCoreTables::multilingualize(__CLASS__, $indices) : $indices;
  }

}
