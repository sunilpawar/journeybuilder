<?php

/**
 * @package CRM
 * @copyright CiviCRM LLC https://civicrm.org/licensing
 *
 * Generated from com.skvare.journeybuilder/xml/schema/CRM/Journeybuilder/JourneyConnection.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 * (GenCodeChecksum:c059a63de4b23fe6648f434c5030dec7)
 */
use CRM_Journeybuilder_ExtensionUtil as E;

/**
 * Database access object for the JourneyConnection entity.
 */
class CRM_Journeybuilder_DAO_JourneyConnection extends CRM_Core_DAO {
  const EXT = E::LONG_NAME;
  const TABLE_ADDED = '';

  /**
   * Static instance to hold the table name.
   *
   * @var string
   */
  public static $_tableName = 'civicrm_journey_connections';

  /**
   * Should CiviCRM log any modifications to this table in the civicrm_log table.
   *
   * @var bool
   */
  public static $_log = FALSE;

  /**
   * Unique JourneyConnection ID
   *
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $id;

  /**
   * FK to Contact
   *
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $journey_id;

  /**
   * FK to Steps
   *
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $from_step_id;

  /**
   * FK to Steps
   *
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $to_step_id;

  /**
   * Condition Type
   *
   * @var string|null
   *   (SQL type: varchar(20))
   *   Note that values will be retrieved from the database as a string.
   */
  public $condition_type;

  /**
   * Condition Value.
   *
   * @var string|null
   *   (SQL type: text)
   *   Note that values will be retrieved from the database as a string.
   */
  public $condition_value;

  /**
   * percentage
   *
   * @var float|string|null
   *   (SQL type: decimal(20,2))
   *   Note that values will be retrieved from the database as a string.
   */
  public $percentage;

  /**
   * Sort Order
   *
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $sort_order;

  /**
   * Class constructor.
   */
  public function __construct() {
    $this->__table = 'civicrm_journey_connections';
    parent::__construct();
  }

  /**
   * Returns localized title of this entity.
   *
   * @param bool $plural
   *   Whether to return the plural version of the title.
   */
  public static function getEntityTitle($plural = FALSE) {
    return $plural ? E::ts('Journey Connections') : E::ts('Journey Connection');
  }

  /**
   * Returns all the column names of this table
   *
   * @return array
   */
  public static function &fields() {
    if (!isset(Civi::$statics[__CLASS__]['fields'])) {
      Civi::$statics[__CLASS__]['fields'] = [
        'id' => [
          'name' => 'id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('ID'),
          'description' => E::ts('Unique JourneyConnection ID'),
          'required' => TRUE,
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_journey_connections.id',
          'table_name' => 'civicrm_journey_connections',
          'entity' => 'JourneyConnection',
          'bao' => 'CRM_Journeybuilder_DAO_JourneyConnection',
          'localizable' => 0,
          'html' => [
            'type' => 'Number',
          ],
          'readonly' => TRUE,
          'add' => NULL,
        ],
        'journey_id' => [
          'name' => 'journey_id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Journey ID'),
          'description' => E::ts('FK to Contact'),
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_journey_connections.journey_id',
          'table_name' => 'civicrm_journey_connections',
          'entity' => 'JourneyConnection',
          'bao' => 'CRM_Journeybuilder_DAO_JourneyConnection',
          'localizable' => 0,
          'FKClassName' => 'CRM_Journeybuilder_DAO_JourneyCampaign',
          'add' => NULL,
        ],
        'from_step_id' => [
          'name' => 'from_step_id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('From Step'),
          'description' => E::ts('FK to Steps'),
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_journey_connections.from_step_id',
          'table_name' => 'civicrm_journey_connections',
          'entity' => 'JourneyConnection',
          'bao' => 'CRM_Journeybuilder_DAO_JourneyConnection',
          'localizable' => 0,
          'FKClassName' => 'CRM_Journeybuilder_DAO_JourneyStep',
          'add' => NULL,
        ],
        'to_step_id' => [
          'name' => 'to_step_id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('To Step'),
          'description' => E::ts('FK to Steps'),
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_journey_connections.to_step_id',
          'table_name' => 'civicrm_journey_connections',
          'entity' => 'JourneyConnection',
          'bao' => 'CRM_Journeybuilder_DAO_JourneyConnection',
          'localizable' => 0,
          'FKClassName' => 'CRM_Journeybuilder_DAO_JourneyStep',
          'add' => NULL,
        ],
        'condition_type' => [
          'name' => 'condition_type',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Condition Type'),
          'description' => E::ts('Condition Type'),
          'maxlength' => 20,
          'size' => CRM_Utils_Type::MEDIUM,
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_journey_connections.condition_type',
          'default' => 'default',
          'table_name' => 'civicrm_journey_connections',
          'entity' => 'JourneyConnection',
          'bao' => 'CRM_Journeybuilder_DAO_JourneyConnection',
          'localizable' => 0,
          'html' => [
            'type' => 'Select',
          ],
          'pseudoconstant' => [
            'callback' => 'CRM_Journeybuilder_BAO_JourneyAnalytics::conditionType',
          ],
          'add' => '1.0',
        ],
        'condition_value' => [
          'name' => 'condition_value',
          'type' => CRM_Utils_Type::T_TEXT,
          'title' => E::ts('Condition Value'),
          'description' => E::ts('Condition Value.'),
          'rows' => 4,
          'cols' => 60,
          'usage' => [
            'import' => TRUE,
            'export' => TRUE,
            'duplicate_matching' => TRUE,
            'token' => FALSE,
          ],
          'import' => TRUE,
          'where' => 'civicrm_journey_connections.condition_value',
          'export' => TRUE,
          'table_name' => 'civicrm_journey_connections',
          'entity' => 'JourneyConnection',
          'bao' => 'CRM_Journeybuilder_DAO_JourneyConnection',
          'localizable' => 0,
          'html' => [
            'type' => 'TextArea',
          ],
          'add' => '1.0',
        ],
        'percentage' => [
          'name' => 'percentage',
          'type' => CRM_Utils_Type::T_MONEY,
          'title' => E::ts('Percentage'),
          'description' => E::ts('percentage'),
          'precision' => [
            20,
            2,
          ],
          'usage' => [
            'import' => TRUE,
            'export' => TRUE,
            'duplicate_matching' => TRUE,
            'token' => FALSE,
          ],
          'import' => TRUE,
          'where' => 'civicrm_journey_connections.percentage',
          'dataPattern' => '/^\d+(\.\d{2})?$/',
          'export' => TRUE,
          'default' => NULL,
          'table_name' => 'civicrm_journey_connections',
          'entity' => 'JourneyConnection',
          'bao' => 'CRM_Journeybuilder_DAO_JourneyConnection',
          'localizable' => 0,
          'html' => [
            'type' => 'Number',
            'label' => E::ts("Percentage"),
          ],
          'add' => NULL,
        ],
        'sort_order' => [
          'name' => 'sort_order',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Sort Order'),
          'description' => E::ts('Sort Order'),
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_journey_connections.sort_order',
          'table_name' => 'civicrm_journey_connections',
          'entity' => 'JourneyConnection',
          'bao' => 'CRM_Journeybuilder_DAO_JourneyConnection',
          'localizable' => 0,
          'html' => [
            'type' => 'Number',
            'label' => E::ts("Sort Order"),
          ],
          'add' => NULL,
        ],
      ];
      CRM_Core_DAO_AllCoreTables::invoke(__CLASS__, 'fields_callback', Civi::$statics[__CLASS__]['fields']);
    }
    return Civi::$statics[__CLASS__]['fields'];
  }

  /**
   * Returns the list of fields that can be imported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &import($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getImports(__CLASS__, 'journey_connections', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of fields that can be exported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &export($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getExports(__CLASS__, 'journey_connections', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of indices
   *
   * @param bool $localize
   *
   * @return array
   */
  public static function indices($localize = TRUE) {
    $indices = [];
    return ($localize && !empty($indices)) ? CRM_Core_DAO_AllCoreTables::multilingualize(__CLASS__, $indices) : $indices;
  }

}
